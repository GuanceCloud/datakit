// Unless explicitly stated otherwise all files in this repository are licensed
// under the MIT License.
// This product includes software developed at Guance Cloud (https://www.guance.com/).
// Copyright 2021-present Guance, Inc.

package mysql

import (
	"fmt"

	"gitlab.jiagouyun.com/cloudcare-tools/datakit/internal/plugins/inputs"
)

func (*Input) Dashboard(lang inputs.I18n) map[string]string {
	switch lang {
	case inputs.I18nZh:
		//nolint:lll
		return map[string]string{
			"host_name":                        "主机名",
			"title":                            "MySQL 监控视图",
			"dbm_title":                        "MySQL DBM 监控视图",
			"activity_title":                   "MySQL Activity 监控视图",
			"overview":                         "概览",
			"description":                      "说明",
			"description_content":              `使用这个仪表板，您可以获得连接数、QPS、TPS、吞吐量、异常连接数、每秒无索引join 查询次数、Schema 大小、慢查询、行锁等待时长、活动用户信息、缓冲情况、锁信息等。\n\n了解更多关于MySQL集成的信息：\n[我们的官方集成文档](https://docs.guance.com/integrations/datastorage/mysql/)\n[监控MySQL性能指标](https://docs.guance.com/datakit/mysql/#measurement)`,
			"connection_number":                "连接数",
			"abnormal_connection_number":       "异常连接数",
			"non_index_join_per_sec":           "每秒无索引 join 查询次数",
			"schema_size":                      "Schema 大小",
			"slow_query":                       "慢查询",
			"write_counts":                     "写入次数",
			"active_user_info":                 "活动用户信息",
			"active_user_list":                 "MySQL 活动用户信息列表",
			"user_connection_distribution":     "当前活动用户 Connections 分布",
			"user_slow_query_distribution":     "当前活动用户慢查询分布",
			"bytes_received":                   "接收字节数",
			"bytes_sent":                       "发送字节数",
			"slow_queries":                     "慢查询数量",
			"cache_hits":                       "缓存命中数",
			"disk_read_per_sec":                "每秒缓冲池磁盘读请求",
			"disk_read_alias":                  "读取请求",
			"buffer_pool_pages":                "缓冲池页数",
			"read_write_pages_per_sec":         "每秒读写页数",
			"row_lock_wait_time":               "行锁等待时长",
			"sql_exec_times_per_sec":           "每秒 SQL 执行次数",
			"read_write_requests_per_sec":      "每秒缓冲池内存读写请求",
			"net_traffic":                      "网络流量",
			"tables_opened_per_sec":            "每秒打开的表数",
			"temporary_tables_created_per_sec": "每秒自动创建的临时表数",
			"lock_information":                 "锁信息",
			"row_locks":                        "行锁数",
			"row_lock_time":                    "行锁耗时",
			"table_locks_per_sec":              "每秒表锁数",
			"aborted_clients_alias":            "由于客户端没有正确关闭连接而中止的连接数",
			"aborted_connections_alias":        "尝试连接到服务器失败的次数",
			"mysql_connect_error":              "尝试与服务器连接导致",
			"avg_lock_wait_time":               "等待锁平均耗时",
			"slow_sql":                         "慢 SQL",
			"transactions_per_sec_alias":       "每秒事务数",
			"locks_waited_alias":               "不能立即获得锁的数量",
			"locks_immediate_alias":            "立即获得锁的数量",
			"left_pages":                       "剩余页数",
			"total_pages_alias":                "总页数",
			"free_pages_alias":                 "可用页数",
			"avg_wait_time_alias":              "等待锁平均耗时",
			"avg_locks_time_alias":             "等待锁总时长",
			"avg_locks_max_time_alias":         "等待锁最大耗时",
			"read_counts_alias":                "读取次数",
			"time_unit":                        "次",
			"open_tables_alias":                "打开表数",
			"tempoary_files_alias":             "临时文件",
			"tempoary_tables_alias":            "临时表",
			"tempoary_disk_tables_alias":       "磁盘临时表",
			"write_pages_alias":                "写页面数",
			"read_pages_alias":                 "读页面数",
			"wait_locks_alias":                 "当前正在等待锁的数量",
			"wait_locks_total_alias":           "等待锁总数",
			"open_connections_alias":           "当前打开的连接数",
			"dbm_info_text":                    fmt.Sprintf(`### 慢查询优化\n\n目前有两种方式可以进行优化慢查询操作\n\n1、通过开启**slow log 慢查询日志**，收集慢查询日志，人为对慢查询 SQL 执行 explain。\n\n2、利用观测云 通过 MySQL 开启 %s 采集数据库性能指标，同时会自动选取部分执行耗时较高的 SQL 语句，获取其执行计划，并采集实际执行过程中的各种性能指标。\n\n<font color='red'>当前 dashboard 属于方式2，通过开启 %s 采集数据库性能指标制作当前仪表盘。</font>`, "`dbm`", "`dbm`"),
			"max_query_time":                   "慢查询最大耗时",
			"max_insert_time":                  "慢插入最大耗时",
			"sql_exec_times":                   "SQL 执行次数",
			"exec_times_per_sql":               "单条 SQL 最大执行次数",
			"max_lock_time":                    "最长锁时间",
			"sql_cost":                         "SQL 耗时",
			"sql_trend":                        "SQL 数趋势",
			"sql_distribution":                 "SQL 语句分布",
			"sql_cost_top_20":                  "SQL 耗时 TOP 20",
			"running_sql":                      "正在执行的 SQL",
			"max_event_exec_time":              "事件最大执行时间",
			"event_type_distribution":          "事件类型分布",
			"event_state_distribution":         "事件状态分布",
			"event_command_distribution":       "事件 Command type 分布",
			"total_count_alias":                "统计数量",
			"process_id":                       "进程 ID",
			"process_user":                     "用户",
			"process_db":                       "数据库",
			"lock_time":                        "锁时间",
			"event_timer_wait":                 "事件执行时间",
			"process_by_db":                    "进程统计",
			"process_distribution":             "进程分布",
			"event_top_50":                     "事件 TOP 50",
			"cost":                             "耗时",
			"sql_number":                       "SQL 数",
			"no_index":                         "无索引",
			"no_good_index":                    "使用索引",
			"select_scan":                      "首表扫描数",
			"select_full_join":                 "链表扫描数",
			"query_count":                      "累计查询次数",
			"create_time":                      "创建时间",
		}
	case inputs.I18nEn:
		//nolint:lll
		return map[string]string{
			"host_name":                        "host",
			"title":                            "MySQL Monitor View",
			"dbm_title":                        "MySQL DBM Monitor View",
			"activity_title":                   "MySQL Activity Monitor View",
			"overview":                         "Overview",
			"description":                      "Description",
			"description_content":              `Using this dashboard, you can obtain connection counts, QPS, TPS, throughput, abnormal connection counts, number of non-index join queries per second, schema size, slow queries, row lock wait time, active user information, buffering status, lock information, and more.\n\nLearn more about MySQL integration:\n[Our official integration documentation](https://docs.guance.com/integrations/datastorage/mysql/)\n[Monitor MySQL performance metrics](https://docs.guance.com/datakit/mysql/#measurement)`,
			"connection_number":                "Connection number",
			"abnormal_connection_number":       "Abnormal connection number",
			"non_index_join_per_sec":           "Number of non-index join queries per second",
			"schema_size":                      "Schema size",
			"slow_query":                       "Slow query",
			"write_counts":                     "Write counts",
			"active_user_info":                 "Active user information",
			"active_user_list":                 "Active user list",
			"user_connection_distribution":     "Active user connections distribution",
			"user_slow_query_distribution":     "Active user slow query distribution",
			"bytes_received":                   "bytes received",
			"bytes_sent":                       "bytes sent",
			"slow_queries":                     "slow queries",
			"cache_hits":                       "cache hits",
			"disk_read_per_sec":                "Disk read requests per second",
			"disk_read_alias":                  "disk_read",
			"buffer_pool_pages":                "Buffer pool pages",
			"read_write_pages_per_sec":         "Page reads/writes per second",
			"row_lock_wait_time":               "Time spent in acquiring row locks",
			"sql_exec_times_per_sec":           "SQL execution times per second",
			"read_write_requests_per_sec":      "Buffer pool read and write requests per second",
			"net_traffic":                      "Net traffic",
			"tables_opened_per_sec":            "Number of tables opened per second",
			"temporary_tables_created_per_sec": "Number of temporary tables created per second",
			"lock_information":                 "Lock information",
			"row_locks":                        "Number of row locks",
			"row_lock_time":                    "Row lock time",
			"table_locks_per_sec":              "Table locks per second",
			"aborted_clients_alias":            "aborted_clients",
			"aborted_connections_alias":        "aborted_connections",
			"mysql_connect_error":              "Failed attempts to connect to the server",
			"avg_lock_wait_time":               "avg_lock_wait_time",
			"slow_sql":                         "slow SQL",
			"transactions_per_sec_alias":       "transactions_per_second",
			"locks_waited_alias":               "locks_waited",
			"locks_immediate_alias":            "locks_immediate",
			"left_pages":                       "left_pages",
			"total_pages_alias":                "total_pages",
			"free_pages_alias":                 "free_pages",
			"avg_wait_time_alias":              "avg_wait_time",
			"avg_locks_time_alias":             "avg_locks_time",
			"avg_locks_max_time_alias":         "avg_locks_max_wait_time",
			"read_counts_alias":                "read_counts",
			"time_unit":                        "time",
			"open_tables_alias":                "open_tables",
			"tempoary_files_alias":             "tempoary_files",
			"tempoary_tables_alias":            "tempoary_tables",
			"tempoary_disk_tables_alias":       "tempoary_disk_tables",
			"write_pages_alias":                "write_pages",
			"read_pages_alias":                 "read_pages",
			"wait_locks_alias":                 "wait_locks",
			"wait_locks_total_alias":           "wait_locks_total",
			"open_connections_alias":           "open_connections",
			"dbm_info_text":                    fmt.Sprintf(`### Slow query optimization\n\nThere are currently two ways to optimize slow query operations.\n\n1. By enabling **slow log** to collect slow query logs and manually performing explain on slow query SQL.\n2. Using Guance Cloud to enable %s in MySQL collector to collect database performance metrics, and automatically select some SQL statements with high execution time to obtain their execution plans and collect various performance metrics during the actual execution process.\n\n<font color='red'>The current dashboard belongs to method 2 by enabling %s to collect database performance metrics.</font>`, "`dbm`", "`dbm`"),
			"max_query_time":                   "aximum time cost for slow query",
			"max_insert_time":                  "Maximum time cost for slow insertion",
			"sql_exec_times":                   "SQL execution times",
			"exec_times_per_sql":               "Maximum execution times of a single SQL",
			"max_lock_time":                    "Maximum lock time",
			"sql_cost":                         "SQL cost",
			"sql_trend":                        "Trend of SQL number",
			"sql_distribution":                 "SQL distribution",
			"sql_cost_top_20":                  "SQL cost TOP 20",
			"running_sql":                      "Running SQL",
			"max_event_exec_time":              "Maximum event execution time",
			"event_type_distribution":          "Event type distribution",
			"event_state_distribution":         "Event state distribution",
			"event_command_distribution":       "Event Command type distribution",
			"total_count_alias":                "total_count",
			"process_id":                       "process ID",
			"process_user":                     "user",
			"process_db":                       "database",
			"lock_time":                        "lock time",
			"event_timer_wait":                 "event time",
			"process_by_db":                    "Process by db",
			"process_distribution":             "Processing SQL distribution",
			"event_top_50":                     "Event TOP 50",
			"cost":                             "cost",
			"sql_number":                       "SQL number",
			"no_index":                         "no index",
			"no_good_index":                    "no good index",
			"select_scan":                      "select scan",
			"select_full_join":                 "select full join",
			"query_count":                      "query count",
			"create_time":                      "create time",
		}
	default:
		return nil
	}
}

func (*Input) Monitor(lang inputs.I18n) map[string]string {
	switch lang {
	case inputs.I18nZh:
		//nolint:lll
		return map[string]string{
			"default_monitor_name":                                     "默认",
			"mysql_qps_title":                                          `MySQL QPS 过高`,
			"mysql_qps_message":                                        `MySQL QPS 过高，请及时安排处理\n当前配置阈值：10\n当前检测值：{{Result}}\nhost：{{host}}\n服务名：{{server}}`,
			"mysql_aborted_connects_title":                             `MySQL 尝试连接到服务器失败的次数过高`,
			"mysql_aborted_connects_message":                           `MySQL 尝试连接到服务器失败的次数过高，请及时安排处理\n当前配置阈值：10\n当前检测值：{{Result}}\nhost：{{host}}\n服务名：{{server}}`,
			"mysql_aborted_clients_title":                              `MySQL 由于客户端没有正确关闭连接而中止的连接数过高`,
			"mysql_aborted_clients_message":                            `尝试连接到服务器失败的次数过高，请及时安排处理\n当前配置阈值：10\n当前检测值：{{Result}}\nhost：{{host}}\n服务名：{{server}}`,
			"mysql_slow_query_title":                                   `MySQL 慢查询次数过高`,
			"mysql_slow_query_message":                                 `MySQL 慢查询数量大于10次，请及时安排处理\n当前配置阈值：10\n当前检测值：{{Result}}\n用户：{{user}}\n`,
			"mysql_lock_title":                                         `MySQL 每秒获得锁次数过高`,
			"mysql_lock_message":                                       `MySQL 每秒立即获得锁的数大于5，请及时安排处理\n当前配置阈值：5\n当前检测值：{{Result}}\nhost：{{host}}\n服务名：{{server}}`,
			
		}
	case inputs.I18nEn:
		//nolint:lll
		return map[string]string{
			"default_monitor_name":                                     "default",
			"mysql_qps_title":                                          `MySQL QPS is too high`,
			"mysql_qps_message":                                        `MySQL QPS is too high, please handle it as soon as possible\nCurrent threshold value: 10\nCurrent detection value: {{Result}}\nhost：{{host}}\nService name：{{server}}`,
			"mysql_aborted_connects_title":                             `MySQL attempts to connect to the server failed too many times`,
			"mysql_aborted_connects_message":                           `MySQL attempts to connect to the server failed too many times, please handle it as soon as possible\nCurrent threshold value: 10\nCurrent detection value: {{Result}}\nhost：{{host}}\nService name：{{server}}`,
			"mysql_aborted_clients_title":                              `MySQL aborted connections due to clients not closing connections`,
			"mysql_aborted_clients_message":                            `MySQL attempts to connect to the server failed too many times, please handle it as soon as possible\nCurrent threshold value: 10\nCurrent detection value: {{Result}}\nhost：{{host}}\nService name：{{server}}`,
			"mysql_slow_query_title":                                   `MySQL slow query count is too high`,
			"mysql_slow_query_message":                                 `MySQL slow query count is too high, please handle it as soon as possible\nCurrent threshold value: 10\nCurrent detection value: {{Result}}\nuser：{{user}}\n`,
			"mysql_lock_title":                                         `MySQL lock acquisition rate is too high`,
			"mysql_lock_message":                                       `MySQL lock acquisition rate is too high, please handle it as soon as possible\nCurrent threshold value: 5\nCurrent detection value: {{Result}}\nhost：{{host}}\nService name：{{server}}`,

		}
	default:
		return nil
	}
}
