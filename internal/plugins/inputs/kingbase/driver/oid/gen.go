//go:build ignore
// +build ignore

/*
*****************************************************************************
* 版权信息：中电科金仓（北京）科技股份有限公司

* 作者：KingbaseES

* 文件名：gen.go

* 功能描述：查询数据库生成oid列表

* 其它说明：

  - 修改记录：
    1.修改时间：

    2.修改人：

    3.修改内容：

*****************************************************************************
*/
package main

import (
	"database/sql"
	"fmt"
	"log"
	"os"
	"os/exec"
	"strings"

	_ "gitlab.jiagouyun.com/cloudcare-tools/datakit/internal/plugins/inputs/kingbase/driver"
)

const (
	host     = "127.0.0.1"
	port     = 54321
	user     = "system"
	password = "123456"
	dbname   = "test"
	sslmode  = "disable"
)

// OID represent a kingbase Object Identifier Type.
type OID struct {
	ID   int
	Type string
}

// Name returns an upper case version of the oid type.
func (oid OID) Name() (s string) {
	return strings.ToUpper(oid.Type)
}

func main() {
	connInfo := fmt.Sprintf("host=%s port=%d user=%s "+
		"password=%s dbname=%s sslmode=%s",
		host, port, user, password, dbname, sslmode)

	db, err := sql.Open("kingbase", connInfo)
	if nil != err {
		log.Fatal(err)
	}
	rows, err := db.Query(`SELECT typname, oid FROM pg_type ORDER BY oid; `)
	if nil != err {
		log.Fatal(err)
	}
	oids := make([]*OID, 0)
	for rows.Next() {
		var oid OID
		if err = rows.Scan(&oid.Type, &oid.ID); nil != err {
			log.Fatal(err)
		}
		oids = append(oids, &oid)
	}
	if err = rows.Err(); nil != err {
		log.Fatal(err)
	}
	cmd := exec.Command("gofmt")
	cmd.Stderr = os.Stderr
	w, err := cmd.StdinPipe()
	if nil != err {
		log.Fatal(err)
	}
	f, err := os.Create("types.go")
	if nil != err {
		log.Fatal(err)
	}
	cmd.Stdout = f
	err = cmd.Start()
	if nil != err {
		log.Fatal(err)
	}
	fmt.Fprintln(w, "// Code generated by gen.go. DO NOT EDIT.")
	fmt.Fprintln(w, "\npackage oid")
	fmt.Fprintln(w, "const (")
	for _, oid := range oids {
		fmt.Fprintf(w, "T_%s Oid = %d\n", oid.Type, oid.ID)
	}
	fmt.Fprintln(w, ")")
	fmt.Fprintln(w, "var TypeName = map[Oid]string{")
	for _, oid := range oids {
		fmt.Fprintf(w, "T_%s: \"%s\",\n", oid.Type, oid.Name())
	}
	fmt.Fprintln(w, "}")
	w.Close()
	cmd.Wait()
}
