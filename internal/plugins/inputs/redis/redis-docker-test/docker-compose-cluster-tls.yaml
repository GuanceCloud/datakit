version: '3.8'

x-redis-node-template: &redis-node-template
    image: 'hub.cloudcarex.com/redis:7'
    network_mode: host

services:
  # --- 定义 9 个 Redis 节点（启用 TLS） ---
  redis-tls-node-1: 
    <<: *redis-node-template
    container_name: redis-tls-node-1
    hostname: redis-tls-node-1
    volumes:
      - redis-tls-data-1:/data
      - ./conf/redis-cluster-1-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-2:
    <<: *redis-node-template
    container_name: redis-tls-node-2
    hostname: redis-tls-node-2
    volumes:
      - redis-tls-data-2:/data
      - ./conf/redis-cluster-2-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-3:
    <<: *redis-node-template
    container_name: redis-tls-node-3
    hostname: redis-tls-node-3
    volumes:
      - redis-tls-data-3:/data
      - ./conf/redis-cluster-3-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-4:
    <<: *redis-node-template
    container_name: redis-tls-node-4
    hostname: redis-tls-node-4
    volumes:
      - redis-tls-data-4:/data
      - ./conf/redis-cluster-4-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-5:
    <<: *redis-node-template
    container_name: redis-tls-node-5
    hostname: redis-tls-node-5
    volumes:
      - redis-tls-data-5:/data
      - ./conf/redis-cluster-5-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-6:
    <<: *redis-node-template
    container_name: redis-tls-node-6
    hostname: redis-tls-node-6
    volumes:
      - redis-tls-data-6:/data
      - ./conf/redis-cluster-6-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-7:
    <<: *redis-node-template
    container_name: redis-tls-node-7
    hostname: redis-tls-node-7
    volumes:
      - redis-tls-data-7:/data
      - ./conf/redis-cluster-7-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-8:
    <<: *redis-node-template
    container_name: redis-tls-node-8
    hostname: redis-tls-node-8
    volumes:
      - redis-tls-data-8:/data
      - ./conf/redis-cluster-8-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  redis-tls-node-9:
    <<: *redis-node-template
    container_name: redis-tls-node-9
    hostname: redis-tls-node-9
    volumes:
      - redis-tls-data-9:/data
      - ./conf/redis-cluster-9-tls.conf:/usr/local/etc/redis/redis.conf:ro
      - ./redis-certs:/tls:ro
    command: redis-server /usr/local/etc/redis/redis.conf

  # --- 自动初始化 TLS 集群的服务 ---
  redis-tls-cluster-creator:
    image: 'hub.cloudcarex.com/redis:7'
    container_name: redis-tls-cluster-creator
    network_mode: host
    volumes:
      - ./redis-certs:/tls:ro
    command: >
      sh -c '
        echo "Waiting for all redis TLS nodes to be ready...";
        for port in 7001 7002 7003 7004 7005 7006 7007 7008 7009; do
          until redis-cli -h 192.168.139.162 -p $$port \
            --tls \
            --cacert /tls/ca-cert.pem \
            --cert /tls/redis-client-cert.pem \
            --key /tls/redis-client-key.pem \
            -a abc123456 PING 2>/dev/null | grep -q PONG; do
            echo "Waiting for TLS node on port $$port...";
            sleep 2;
          done;
          echo "TLS node on port $$port is ready.";
        done;
        echo "All TLS nodes are ready. Creating cluster...";
        redis-cli \
          --cluster create \
          192.168.139.162:7001 \
          192.168.139.162:7002 \
          192.168.139.162:7003 \
          192.168.139.162:7004 \
          192.168.139.162:7005 \
          192.168.139.162:7006 \
          192.168.139.162:7007 \
          192.168.139.162:7008 \
          192.168.139.162:7009 \
          --cluster-replicas 2 \
          --cluster-yes \
          --tls \
          --cacert /tls/ca-cert.pem \
          --cert /tls/redis-client-cert.pem \
          --key /tls/redis-client-key.pem \
          -a abc123456;
        echo "TLS cluster created successfully!";
      '
    depends_on:
      - redis-tls-node-1
      - redis-tls-node-2
      - redis-tls-node-3
      - redis-tls-node-4
      - redis-tls-node-5
      - redis-tls-node-6
      - redis-tls-node-7
      - redis-tls-node-8
      - redis-tls-node-9

# --- 定义数据卷 ---
volumes:
  redis-tls-data-1:
  redis-tls-data-2:
  redis-tls-data-3:
  redis-tls-data-4:
  redis-tls-data-5:
  redis-tls-data-6:
  redis-tls-data-7:
  redis-tls-data-8:
  redis-tls-data-9:

