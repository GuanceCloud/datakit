{
  "checkers": [
    {
      "jsonScript": {
        "type": "simpleCheck",
        "every": "5m",
        "title": "<<.Monitor.mongodb_connection_title>>",
        "groupBy": [
          "instance"
        ],
        "message": "<<.Monitor.mongodb_connection_message>>",
        "targets": [
          {
            "dql": "eval(A/(A+B), A=\"M::`mongodb`:(last(`connections_current`)) BY `instance`\", B=\"M::`mongodb`:(last(`connections_available`)) BY `instance`\")",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 300,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "80"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "infoEvent": false,
          "combineExpr": "A && B",
          "openMatchTimes": false
        },
        "noDataTitle": "",
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "80"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "384b1aeb-9eb6-4f67-924b-7bb03832d657",
            "qtype": "dql",
            "query": {
              "q": "eval(A/(A+B), A=\"M::`mongodb`:(last(`connections_current`)) BY `instance`\", B=\"M::`mongodb`:(last(`connections_available`)) BY `instance`\")",
              "code": "Result",
              "type": "expression",
              "alias": "",
              "children": [
                {
                  "q": "M::`mongodb`:(last(`connections_current`)) BY `instance`",
                  "code": "A",
                  "fill": null,
                  "type": "simple",
                  "alias": "",
                  "field": "connections_current",
                  "fillNum": null,
                  "filters": [],
                  "groupBy": [
                    "instance"
                  ],
                  "labelOp": "",
                  "fieldFunc": "last",
                  "fieldType": "float",
                  "namespace": "metric",
                  "dataSource": "mongodb",
                  "queryFuncs": [],
                  "withLabels": [],
                  "groupByTime": ""
                },
                {
                  "q": "M::`mongodb`:(last(`connections_available`)) BY `instance`",
                  "code": "B",
                  "fill": null,
                  "type": "simple",
                  "alias": "",
                  "field": "connections_available",
                  "fillNum": null,
                  "filters": [],
                  "groupBy": [
                    "instance"
                  ],
                  "labelOp": "",
                  "fieldFunc": "last",
                  "fieldType": "float",
                  "namespace": "metric",
                  "dataSource": "mongodb",
                  "queryFuncs": [],
                  "withLabels": [],
                  "groupByTime": ""
                }
              ],
              "funcList": [],
              "expression": "A/(A+B)"
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": true,
      "tagInfo": [
        {
          "name": "mongodb"
        }
      ],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    },
    {
      "jsonScript": {
        "type": "simpleCheck",
        "every": "5m",
        "title": "<<.Monitor.mongodb_master_title>>",
        "groupBy": [
          "rs_name"
        ],
        "message": "<<.Monitor.mongodb_master_message>>",
        "targets": [
          {
            "dql": "M::`mongodb`:(last(`repl_lag`)) BY `rs_name`",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 300,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "100"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "infoEvent": false,
          "combineExpr": "A && B",
          "openMatchTimes": false
        },
        "noDataTitle": "",
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "100"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "75b56c51-71bd-4788-9436-530bb16161bb",
            "qtype": "dql",
            "query": {
              "q": "M::`mongodb`:(last(`repl_lag`)) BY `rs_name`",
              "code": "Result",
              "fill": null,
              "type": "simple",
              "alias": "",
              "field": "repl_lag",
              "fillNum": null,
              "filters": [],
              "groupBy": [
                "rs_name"
              ],
              "labelOp": "",
              "funcList": [],
              "fieldFunc": "last",
              "fieldType": "float",
              "namespace": "metric",
              "dataSource": "mongodb",
              "queryFuncs": [],
              "withLabels": [],
              "groupByTime": ""
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": false,
      "tagInfo": [
        {
          "name": "mongodb"
        }
      ],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    },
    {
      "jsonScript": {
        "type": "simpleCheck",
        "every": "5m",
        "title": "<<.Monitor.mongodb_agg_fail_title>>",
        "groupBy": [
          "instance"
        ],
        "message": "<<.Monitor.mongodb_agg_fail_message>>",
        "targets": [
          {
            "dql": "eval((A/B)*100, A=\"M::`mongodb`:(last(`aggregate_command_failed`)) BY `instance`\", B=\"M::`mongodb`:(last(`aggregate_command_total`)) BY `instance`\")",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 300,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "5"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "infoEvent": false,
          "combineExpr": "A && B",
          "openMatchTimes": false
        },
        "noDataTitle": "",
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "5"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "75b56c51-71bd-4788-9436-530bb16161bb",
            "qtype": "dql",
            "query": {
              "q": "eval((A/B)*100, A=\"M::`mongodb`:(last(`aggregate_command_failed`)) BY `instance`\", B=\"M::`mongodb`:(last(`aggregate_command_total`)) BY `instance`\")",
              "code": "Result",
              "type": "expression",
              "alias": "",
              "children": [
                {
                  "q": "M::`mongodb`:(last(`aggregate_command_failed`)) BY `instance`",
                  "code": "A",
                  "fill": null,
                  "type": "dql",
                  "alias": "",
                  "field": "aggregate_command_failed",
                  "fillNum": null,
                  "filters": [],
                  "groupBy": [
                    "instance"
                  ],
                  "labelOp": "",
                  "fieldFunc": "last",
                  "fieldType": "float",
                  "namespace": "metric",
                  "dataSource": "mongodb",
                  "queryFuncs": [],
                  "withLabels": [],
                  "groupByTime": "",
                  "indexFilter": "default"
                },
                {
                  "q": "M::`mongodb`:(last(`aggregate_command_total`)) BY `instance`",
                  "code": "B",
                  "fill": null,
                  "type": "dql",
                  "alias": "",
                  "field": "aggregate_command_total",
                  "index": "default",
                  "fillNum": null,
                  "filters": [],
                  "groupBy": [
                    "instance"
                  ],
                  "indexes": [
                    "default"
                  ],
                  "labelOp": "",
                  "interval": "",
                  "fieldFunc": "last",
                  "namespace": "metric",
                  "dataSource": "mongodb",
                  "queryFuncs": [],
                  "withLabels": [],
                  "groupByTime": "",
                  "indexFilter": "default",
                  "dataSourceFunc": ""
                }
              ],
              "funcList": [],
              "expression": "(A/B)*100"
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": false,
      "tagInfo": [
        {
          "name": "mongodb"
        }
      ],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    }
  ]
}