{
  "checkers": [
    {
      "jsonScript": {
        "type": "simpleCheck",
        "every": "5m",
        "title": "<<.Monitor.clickhouse_http_connections_title>>",
        "groupBy": [
          "host",
          "instance"
        ],
        "message": "<<.Monitor.clickhouse_http_connections_message>>",
        "targets": [
          {
            "dql": "M::`ClickHouseMetrics`:(last(`HTTPConnection`)) BY `host`, `instance`",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 300,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "500"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "error",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "300"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "warning",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "100"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "infoEvent": false,
          "combineExpr": "A && B",
          "openMatchTimes": false
        },
        "eventCharts": [],
        "noDataTitle": "",
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "eventChartEnable": false,
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "500"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "error",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "300"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "warning",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "100"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "7b818f4b-4645-4951-932a-a584218776a0",
            "qtype": "dql",
            "query": {
              "q": "M::`ClickHouseMetrics`:(last(`HTTPConnection`)) BY `host`, `instance`",
              "code": "Result",
              "type": "simple",
              "alias": "",
              "field": "HTTPConnection",
              "filters": [],
              "groupBy": [
                "host",
                "instance"
              ],
              "funcList": [],
              "fieldFunc": "last",
              "fieldType": "float",
              "namespace": "metric",
              "dataSource": "ClickHouseMetrics",
              "groupByTime": "",
              "additionalFields": null
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": true,
      "tagInfo": [],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    },
    {
      "jsonScript": {
        "type": "simpleCheck",
        "every": "5m",
        "title": "<<.Monitor.clickhoust_tcp_title>>",
        "groupBy": [
          "host",
          "instance"
        ],
        "message": "<<.Monitor.clickhoust_tcp_message>>",
        "targets": [
          {
            "dql": "M::`ClickHouseMetrics`:(last(`TCPConnection`)) BY `host`, `instance`",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 300,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "500"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "error",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "300"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "warning",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "100"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "infoEvent": false,
          "combineExpr": "A && B",
          "openMatchTimes": false
        },
        "eventCharts": [],
        "noDataTitle": "",
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "eventChartEnable": false,
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "500"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "error",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "300"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "warning",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "100"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "7b818f4b-4645-4951-932a-a584218776a0",
            "qtype": "dql",
            "query": {
              "q": "M::`ClickHouseMetrics`:(last(`TCPConnection`)) BY `host`, `instance`",
              "code": "Result",
              "type": "simple",
              "alias": "",
              "field": "TCPConnection",
              "filters": [],
              "groupBy": [
                "host",
                "instance"
              ],
              "funcList": [],
              "fieldFunc": "last",
              "fieldType": "float",
              "namespace": "metric",
              "dataSource": "ClickHouseMetrics",
              "groupByTime": "",
              "additionalFields": null
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": true,
      "tagInfo": [],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    },
    {
      "jsonScript": {
        "type": "seniorMutationsCheck",
        "every": "5m",
        "range": 900,
        "title": "<<.Monitor.replicated_checks_title>>",
        "groupBy": [
          "host",
          "instance"
        ],
        "message": "<<.Monitor.replicated_checks_message>>",
        "range_2": 1800,
        "targets": [
          {
            "dql": "M::`ClickHouseMetrics`:(last(`ReplicatedChecks`)) BY `host`, `instance`",
            "alias": "Result",
            "qtype": "dql"
          }
        ],
        "channels": [],
        "interval": 1800,
        "atAccounts": [],
        "checkerOpt": {
          "rules": [
            {
              "status": "critical",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "80"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "error",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "50"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            },
            {
              "status": "warning",
              "conditions": [
                {
                  "alias": "Result",
                  "operands": [
                    "30"
                  ],
                  "operator": ">="
                }
              ],
              "matchTimes": 1,
              "conditionLogic": "and"
            }
          ],
          "diffMode": "percent",
          "direction": "both",
          "threshold": {
            "value": null,
            "status": false,
            "operator": ">"
          },
          "combineExpr": "A && B"
        },
        "eventCharts": [],
        "noDataTitle": "",
        "periodBefore": 0,
        "noDataMessage": "",
        "atNoDataAccounts": [],
        "eventChartEnable": false,
        "disableCheckEndTime": false,
        "notificationMessage": "",
        "recoverNeedPeriodCount": 2,
        "openNotificationMessage": false,
        "noDataNotificationMessage": "",
        "openNoDataNotificationMessage": false
      },
      "extend": {
        "rules": [
          {
            "status": "critical",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "80"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "error",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "50"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          },
          {
            "status": "warning",
            "conditions": [
              {
                "alias": "Result",
                "operands": [
                  "30"
                ],
                "operator": ">="
              }
            ],
            "matchTimes": 1,
            "conditionLogic": "and"
          }
        ],
        "manager": [],
        "funcName": "",
        "querylist": [
          {
            "uuid": "74a2c554-1a43-49f7-affa-0b7162a2c7ac",
            "qtype": "dql",
            "query": {
              "q": "M::`ClickHouseMetrics`:(last(`ReplicatedChecks`)) BY `host`, `instance`",
              "code": "Result",
              "type": "simple",
              "alias": "",
              "field": "ReplicatedChecks",
              "filters": [],
              "groupBy": [
                "host",
                "instance"
              ],
              "funcList": [],
              "fieldFunc": "last",
              "fieldType": "float",
              "namespace": "metric",
              "dataSource": "ClickHouseMetrics",
              "groupByTime": "",
              "additionalFields": null
            },
            "datasource": "dataflux"
          }
        ],
        "issueLevelUUID": "",
        "needRecoverIssue": false,
        "isNeedCreateIssue": false,
        "issueDfStatus": []
      },
      "is_disable": false,
      "tagInfo": [],
      "secret": "",
      "type": "trigger",
      "monitorName": "default",
      "alertPolicyNames": []
    }
  ]
}